{"version":3,"file":"static/js/818.7cedd89c.chunk.js","mappings":"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","sources":["components/confirm-dialog/ConfirmDialog.js","components/custom-breadcrumbs/LinkItem.js","components/custom-breadcrumbs/CustomBreadcrumbs.js","components/table/utils.js","components/table/useTable.js","components/empty-content/EmptyContent.js","components/table/TableNoData.js","components/table/TableEmptyRows.js","components/table/TableHeadCustom.js","components/table/TableSelectedAction.js","components/table/TablePaginationCustom.js","sections/@dashboard/user/list/UserTableRow.js","sections/@dashboard/user/list/UserTableToolbar.js","pages/dashboard/Customer/CustomerListPage.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\n// @mui\r\nimport { Dialog, Button, DialogTitle, DialogActions, DialogContent } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nConfirmDialog.propTypes = {\r\n  open: PropTypes.bool,\r\n  title: PropTypes.node,\r\n  action: PropTypes.node,\r\n  content: PropTypes.node,\r\n  onClose: PropTypes.func,\r\n};\r\n\r\nexport default function ConfirmDialog({ title, content, action, open, onClose, ...other }) {\r\n  return (\r\n    <Dialog fullWidth maxWidth=\"xs\" open={open} onClose={onClose} {...other}>\r\n      <DialogTitle sx={{ pb: 2 }}>{title}</DialogTitle>\r\n\r\n      {content && <DialogContent sx={{ typography: 'body2' }}> {content} </DialogContent>}\r\n\r\n      <DialogActions>\r\n        {action}\r\n\r\n        <Button variant=\"outlined\" color=\"inherit\" onClick={onClose}>\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n// @mui\r\nimport { Box, Link } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nBreadcrumbsLink.propTypes = {\r\n  activeLast: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  link: PropTypes.shape({\r\n    href: PropTypes.string,\r\n    icon: PropTypes.node,\r\n    name: PropTypes.string,\r\n  }),\r\n};\r\n\r\nexport default function BreadcrumbsLink({ link, activeLast, disabled }) {\r\n  const { name, href, icon } = link;\r\n\r\n  const styles = {\r\n    typography: 'body2',\r\n    alignItems: 'center',\r\n    color: 'text.primary',\r\n    display: 'inline-flex',\r\n    ...(disabled &&\r\n      !activeLast && {\r\n        cursor: 'default',\r\n        pointerEvents: 'none',\r\n        color: 'text.disabled',\r\n      }),\r\n  };\r\n\r\n  const renderContent = (\r\n    <>\r\n      {icon && (\r\n        <Box\r\n          component=\"span\"\r\n          sx={{\r\n            mr: 1,\r\n            display: 'inherit',\r\n            '& svg': { width: 20, height: 20 },\r\n          }}\r\n        >\r\n          {icon}\r\n        </Box>\r\n      )}\r\n\r\n      {name}\r\n    </>\r\n  );\r\n\r\n  if (href) {\r\n    return (\r\n      <Link component={RouterLink} to={href} sx={styles}>\r\n        {renderContent}\r\n      </Link>\r\n    );\r\n  }\r\n\r\n  return <Box sx={styles}> {renderContent} </Box>;\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { Box, Link, Stack, Typography, Breadcrumbs } from '@mui/material';\r\n//\r\nimport LinkItem from './LinkItem';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nCustomBreadcrumbs.propTypes = {\r\n  sx: PropTypes.object,\r\n  action: PropTypes.node,\r\n  links: PropTypes.array,\r\n  heading: PropTypes.string,\r\n  moreLink: PropTypes.array,\r\n  activeLast: PropTypes.bool,\r\n};\r\n\r\nexport default function CustomBreadcrumbs({\r\n  links,\r\n  action,\r\n  heading,\r\n  moreLink,\r\n  activeLast,\r\n  sx,\r\n  ...other\r\n}) {\r\n  const lastLink = links[links.length - 1].name;\r\n\r\n  return (\r\n    <Box sx={{ mb: 5, ...sx }}>\r\n      <Stack direction=\"row\" alignItems=\"center\">\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          {/* HEADING */}\r\n          {heading && (\r\n            <Typography variant=\"h4\" gutterBottom>\r\n              {heading}\r\n            </Typography>\r\n          )}\r\n\r\n          {/* BREADCRUMBS */}\r\n          {!!links.length && (\r\n            <Breadcrumbs separator={<Separator />} {...other}>\r\n              {links.map((link) => (\r\n                <LinkItem\r\n                  key={link.name || ''}\r\n                  link={link}\r\n                  activeLast={activeLast}\r\n                  disabled={link.name === lastLink}\r\n                />\r\n              ))}\r\n            </Breadcrumbs>\r\n          )}\r\n        </Box>\r\n\r\n        {action && <Box sx={{ flexShrink: 0 }}> {action} </Box>}\r\n      </Stack>\r\n\r\n      {/* MORE LINK */}\r\n      {!!moreLink && (\r\n        <Box sx={{ mt: 2 }}>\r\n          {moreLink.map((href) => (\r\n            <Link\r\n              noWrap\r\n              key={href}\r\n              href={href}\r\n              variant=\"body2\"\r\n              target=\"_blank\"\r\n              rel=\"noopener\"\r\n              sx={{ display: 'table' }}\r\n            >\r\n              {href}\r\n            </Link>\r\n          ))}\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction Separator() {\r\n  return (\r\n    <Box\r\n      component=\"span\"\r\n      sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }}\r\n    />\r\n  );\r\n}\r\n","// ----------------------------------------------------------------------\r\n\r\nexport function emptyRows(page, rowsPerPage, arrayLength) {\r\n  return page > 0 ? Math.max(0, (1 + page) * rowsPerPage - arrayLength) : 0;\r\n}\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nexport function getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n","import { useState, useCallback } from 'react';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function useTable(props) {\r\n  const [dense, setDense] = useState(!!props?.defaultDense);\r\n\r\n  const [orderBy, setOrderBy] = useState(props?.defaultOrderBy || 'name');\r\n\r\n  const [order, setOrder] = useState(props?.defaultOrder || 'asc');\r\n\r\n  const [page, setPage] = useState(props?.defaultCurrentPage || 0);\r\n\r\n  const [rowsPerPage, setRowsPerPage] = useState(props?.defaultRowsPerPage || 5);\r\n\r\n  const [selected, setSelected] = useState(props?.defaultSelected || []);\r\n\r\n  const onSort = useCallback(\r\n    (id) => {\r\n      const isAsc = orderBy === id && order === 'asc';\r\n      if (id !== '') {\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(id);\r\n      }\r\n    },\r\n    [order, orderBy]\r\n  );\r\n\r\n  const onSelectRow = useCallback(\r\n    (id) => {\r\n      const selectedIndex = selected.indexOf(id);\r\n\r\n      let newSelected = [];\r\n\r\n      if (selectedIndex === -1) {\r\n        newSelected = newSelected.concat(selected, id);\r\n      } else if (selectedIndex === 0) {\r\n        newSelected = newSelected.concat(selected.slice(1));\r\n      } else if (selectedIndex === selected.length - 1) {\r\n        newSelected = newSelected.concat(selected.slice(0, -1));\r\n      } else if (selectedIndex > 0) {\r\n        newSelected = newSelected.concat(\r\n          selected.slice(0, selectedIndex),\r\n          selected.slice(selectedIndex + 1)\r\n        );\r\n      }\r\n      setSelected(newSelected);\r\n    },\r\n    [selected]\r\n  );\r\n\r\n  const onSelectAllRows = useCallback((checked, newSelecteds) => {\r\n    if (checked) {\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  }, []);\r\n\r\n  const onChangePage = useCallback((event, newPage) => {\r\n    setPage(newPage);\r\n  }, []);\r\n\r\n  const onChangeRowsPerPage = useCallback((event) => {\r\n    setPage(0);\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n  }, []);\r\n\r\n  const onChangeDense = useCallback((event) => {\r\n    setDense(event.target.checked);\r\n  }, []);\r\n\r\n  return {\r\n    dense,\r\n    order,\r\n    page,\r\n    orderBy,\r\n    rowsPerPage,\r\n    //\r\n    selected,\r\n    onSelectRow,\r\n    onSelectAllRows,\r\n    //\r\n    onSort,\r\n    onChangePage,\r\n    onChangeDense,\r\n    onChangeRowsPerPage,\r\n    //\r\n    setPage,\r\n    setDense,\r\n    setOrder,\r\n    setOrderBy,\r\n    setSelected,\r\n    setRowsPerPage,\r\n  };\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { Typography, Stack } from '@mui/material';\r\n//\r\nimport Image from '../image';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nEmptyContent.propTypes = {\r\n  sx: PropTypes.object,\r\n  img: PropTypes.string,\r\n  title: PropTypes.string,\r\n  description: PropTypes.string,\r\n};\r\n\r\nexport default function EmptyContent({ title, description, img, sx, ...other }) {\r\n  return (\r\n    <Stack\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      sx={{\r\n        height: 1,\r\n        textAlign: 'center',\r\n        p: (theme) => theme.spacing(8, 2),\r\n        ...sx,\r\n      }}\r\n      {...other}\r\n    >\r\n      <Image\r\n        disabledEffect\r\n        alt=\"empty content\"\r\n        src={img || '/assets/illustrations/illustration_empty_content.svg'}\r\n        sx={{ height: 240, mb: 3 }}\r\n      />\r\n\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        {title}\r\n      </Typography>\r\n\r\n      {description && (\r\n        <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n          {description}\r\n        </Typography>\r\n      )}\r\n    </Stack>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { TableRow, TableCell } from '@mui/material';\r\n//\r\nimport EmptyContent from '../empty-content';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nTableNoData.propTypes = {\r\n  isNotFound: PropTypes.bool,\r\n};\r\n\r\nexport default function TableNoData({ isNotFound }) {\r\n  return (\r\n    <TableRow>\r\n      {isNotFound ? (\r\n        <TableCell colSpan={12}>\r\n          <EmptyContent\r\n            title=\"No Data\"\r\n            sx={{\r\n              '& span.MuiBox-root': { height: 160 },\r\n            }}\r\n          />\r\n        </TableCell>\r\n      ) : (\r\n        <TableCell colSpan={12} sx={{ p: 0 }} />\r\n      )}\r\n    </TableRow>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { TableRow, TableCell } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nTableEmptyRows.propTypes = {\r\n  height: PropTypes.number,\r\n  emptyRows: PropTypes.number,\r\n};\r\n\r\nexport default function TableEmptyRows({ emptyRows, height }) {\r\n  if (!emptyRows) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <TableRow\r\n      sx={{\r\n        ...(height && {\r\n          height: height * emptyRows,\r\n        }),\r\n      }}\r\n    >\r\n      <TableCell colSpan={9} />\r\n    </TableRow>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { Box, Checkbox, TableRow, TableCell, TableHead, TableSortLabel } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst visuallyHidden = {\r\n  border: 0,\r\n  margin: -1,\r\n  padding: 0,\r\n  width: '1px',\r\n  height: '1px',\r\n  overflow: 'hidden',\r\n  position: 'absolute',\r\n  whiteSpace: 'nowrap',\r\n  clip: 'rect(0 0 0 0)',\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nTableHeadCustom.propTypes = {\r\n  sx: PropTypes.object,\r\n  onSort: PropTypes.func,\r\n  orderBy: PropTypes.string,\r\n  headLabel: PropTypes.array,\r\n  rowCount: PropTypes.number,\r\n  numSelected: PropTypes.number,\r\n  onSelectAllRows: PropTypes.func,\r\n  order: PropTypes.oneOf(['asc', 'desc']),\r\n};\r\n\r\nexport default function TableHeadCustom({\r\n  order,\r\n  orderBy,\r\n  rowCount = 0,\r\n  headLabel,\r\n  numSelected = 0,\r\n  onSort,\r\n  onSelectAllRows,\r\n  sx,\r\n}) {\r\n  return (\r\n    <TableHead sx={sx}>\r\n      <TableRow>\r\n        {onSelectAllRows && (\r\n          <TableCell padding=\"checkbox\">\r\n            <Checkbox\r\n              indeterminate={numSelected > 0 && numSelected < rowCount}\r\n              checked={rowCount > 0 && numSelected === rowCount}\r\n              onChange={(event) => onSelectAllRows(event.target.checked)}\r\n            />\r\n          </TableCell>\r\n        )}\r\n\r\n        {headLabel.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.align || 'left'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n            sx={{ width: headCell.width, minWidth: headCell.minWidth }}\r\n          >\r\n            {onSort ? (\r\n              <TableSortLabel\r\n                hideSortIcon\r\n                active={orderBy === headCell.id}\r\n                direction={orderBy === headCell.id ? order : 'asc'}\r\n                onClick={() => onSort(headCell.id)}\r\n                sx={{ textTransform: 'capitalize' }}\r\n              >\r\n                {headCell.label}\r\n\r\n                {orderBy === headCell.id ? (\r\n                  <Box sx={{ ...visuallyHidden }}>\r\n                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                  </Box>\r\n                ) : null}\r\n              </TableSortLabel>\r\n            ) : (\r\n              headCell.label\r\n            )}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { Checkbox, Typography, Stack } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nTableSelectedAction.propTypes = {\r\n  sx: PropTypes.object,\r\n  dense: PropTypes.bool,\r\n  action: PropTypes.node,\r\n  rowCount: PropTypes.number,\r\n  numSelected: PropTypes.number,\r\n  onSelectAllRows: PropTypes.func,\r\n};\r\n\r\nexport default function TableSelectedAction({\r\n  dense,\r\n  action,\r\n  rowCount,\r\n  numSelected,\r\n  onSelectAllRows,\r\n  sx,\r\n  ...other\r\n}) {\r\n  if (!numSelected) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Stack\r\n      direction=\"row\"\r\n      alignItems=\"center\"\r\n      sx={{\r\n        pl: 1,\r\n        pr: 2,\r\n        top: 0,\r\n        left: 0,\r\n        width: 1,\r\n        zIndex: 9,\r\n        height: 58,\r\n        position: 'absolute',\r\n        bgcolor: 'primary.lighter',\r\n        ...(dense && {\r\n          height: 38,\r\n        }),\r\n        ...sx,\r\n      }}\r\n      {...other}\r\n    >\r\n      <Checkbox\r\n        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n        checked={rowCount > 0 && numSelected === rowCount}\r\n        onChange={(event) => onSelectAllRows(event.target.checked)}\r\n      />\r\n\r\n      <Typography\r\n        variant=\"subtitle1\"\r\n        sx={{\r\n          ml: 2,\r\n          flexGrow: 1,\r\n          color: 'primary.main',\r\n          ...(dense && {\r\n            ml: 3,\r\n          }),\r\n        }}\r\n      >\r\n        {numSelected} selected\r\n      </Typography>\r\n\r\n      {action && action}\r\n    </Stack>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { Box, Switch, TablePagination, FormControlLabel } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nTablePaginationCustom.propTypes = {\r\n  dense: PropTypes.bool,\r\n  onChangeDense: PropTypes.func,\r\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.number),\r\n  sx: PropTypes.object,\r\n};\r\n\r\nexport default function TablePaginationCustom({\r\n  dense,\r\n  onChangeDense,\r\n  rowsPerPageOptions = [5, 10, 25],\r\n  sx,\r\n  ...other\r\n}) {\r\n  return (\r\n    <Box sx={{ position: 'relative', ...sx }}>\r\n      <TablePagination rowsPerPageOptions={rowsPerPageOptions} component=\"div\" {...other} />\r\n\r\n      {onChangeDense && (\r\n        <FormControlLabel\r\n          label=\"Dense\"\r\n          control={<Switch checked={dense} onChange={onChangeDense} />}\r\n          sx={{\r\n            pl: 2,\r\n            py: 1.5,\r\n            top: 0,\r\n            position: {\r\n              sm: 'absolute',\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n// @mui\r\nimport {\r\n  Stack,\r\n  Avatar,\r\n  Button,\r\n  Checkbox,\r\n  TableRow,\r\n  MenuItem,\r\n  TableCell,\r\n  IconButton,\r\n  Typography,\r\n} from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\n// components\r\nimport Label from '../../../../components/label';\r\nimport Iconify from '../../../../components/iconify';\r\nimport MenuPopover from '../../../../components/menu-popover';\r\nimport ConfirmDialog from '../../../../components/confirm-dialog';\r\nimport { CustomAvatar } from '../../../../components/custom-avatar';\r\nimport { PATH_DASHBOARD } from '../../../../routes/paths';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nUserTableRow.propTypes = {\r\n  row: PropTypes.object,\r\n  selected: PropTypes.bool,\r\n  onEditRow: PropTypes.func,\r\n  onDeleteRow: PropTypes.func,\r\n  onSelectRow: PropTypes.func,\r\n};\r\n\r\nconst getCharAtName = (name) => name && name.charAt(0).toUpperCase();\r\n\r\nconst getColorByName = (name) => {\r\n  if (['A', 'N', 'H', 'L', 'Q'].includes(getCharAtName(name))) return 'primary';\r\n  if (['F', 'G', 'T', 'I', 'J'].includes(getCharAtName(name))) return 'info';\r\n  if (['K', 'D', 'Y', 'B', 'O'].includes(getCharAtName(name))) return 'success';\r\n  if (['P', 'E', 'R', 'S', 'U'].includes(getCharAtName(name))) return 'warning';\r\n  if (['V', 'W', 'X', 'M', 'Z'].includes(getCharAtName(name))) return 'error';\r\n  return 'default';\r\n};\r\n\r\nexport default function UserTableRow({ row, selected, onEditRow, onSelectRow, onDeleteRow }) {\r\n  const { name, compunys_name, phone_no, country, status,id } = row;\r\n\r\n  const [openConfirm, setOpenConfirm] = useState(false);\r\n\r\n  const [openPopover, setOpenPopover] = useState(null);\r\n\r\n  const handleOpenConfirm = () => {\r\n    setOpenConfirm(true);\r\n  };\r\n\r\n  const handleCloseConfirm = () => {\r\n    setOpenConfirm(false);\r\n  };\r\n\r\n  const handleOpenPopover = (event) => {\r\n    setOpenPopover(event.currentTarget);\r\n  };\r\n\r\n  const handleClosePopover = () => {\r\n    setOpenPopover(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TableRow hover selected={selected}>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox checked={selected} onClick={onSelectRow} />\r\n        </TableCell>\r\n\r\n        <TableCell>\r\n          <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n            <CustomAvatar sx={{ height: 40, width: 40, }} name={name} />\r\n\r\n            <Link to={PATH_DASHBOARD.customer.customerProfile(id)} >\r\n              <Typography color='InfoText' variant=\"subtitle2\" noWrap>\r\n                {name}\r\n              </Typography>\r\n            </Link>\r\n          </Stack>\r\n        </TableCell>\r\n\r\n        <TableCell align=\"left\">{phone_no}</TableCell>\r\n        <TableCell align=\"left\">{compunys_name}</TableCell>\r\n\r\n        <TableCell align=\"left\" sx={{ textTransform: 'capitalize' }}>\r\n          {country}\r\n        </TableCell>\r\n\r\n        <TableCell align=\"left\">\r\n          <Label\r\n            variant=\"soft\"\r\n            color={(status === 0 && 'error') || 'success'}\r\n            sx={{ textTransform: 'capitalize' }}\r\n          >\r\n            {(status === 0) ? 'Inactive' : 'Active'}\r\n          </Label>\r\n        </TableCell>\r\n\r\n        <TableCell align=\"right\">\r\n          <IconButton color={openPopover ? 'inherit' : 'default'} onClick={handleOpenPopover}>\r\n            <Iconify icon=\"eva:more-vertical-fill\" />\r\n          </IconButton>\r\n        </TableCell>\r\n      </TableRow>\r\n\r\n      <MenuPopover\r\n        open={openPopover}\r\n        onClose={handleClosePopover}\r\n        arrow=\"right-top\"\r\n        sx={{ width: 140 }}\r\n      >\r\n        <MenuItem\r\n          onClick={() => {\r\n            handleOpenConfirm();\r\n            handleClosePopover();\r\n          }}\r\n          sx={{ color: 'error.main' }}\r\n        >\r\n          <Iconify icon=\"eva:trash-2-outline\" />\r\n          Delete\r\n        </MenuItem>\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            onEditRow();\r\n            handleClosePopover();\r\n          }}\r\n        >\r\n          <Iconify icon=\"eva:edit-fill\" />\r\n          Edit\r\n        </MenuItem>\r\n\r\n      </MenuPopover>\r\n\r\n      <ConfirmDialog\r\n        open={openConfirm}\r\n        onClose={handleCloseConfirm}\r\n        title=\"Delete\"\r\n        content=\"Are you sure want to delete?\"\r\n        action={\r\n          <Button variant=\"contained\" color=\"error\" onClick={onDeleteRow}>\r\n            Delete\r\n          </Button>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { Stack, InputAdornment, TextField, MenuItem, Button } from '@mui/material';\r\n// components\r\nimport Iconify from '../../../../components/iconify';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nUserTableToolbar.propTypes = {\r\n  isFiltered: PropTypes.bool,\r\n  filterName: PropTypes.string,\r\n  onFilterName: PropTypes.func,\r\n  onResetFilter: PropTypes.func,\r\n};\r\n\r\nexport default function UserTableToolbar({\r\n  isFiltered,\r\n  filterName,\r\n  onFilterName,\r\n  onResetFilter,\r\n}) {\r\n  return (\r\n    <Stack\r\n      spacing={2}\r\n      alignItems=\"center\"\r\n      direction={{\r\n        xs: 'column',\r\n        sm: 'row',\r\n      }}\r\n      sx={{ px: 2.5, py: 3 }}\r\n    >\r\n      <TextField\r\n        fullWidth\r\n        value={filterName}\r\n        onChange={onFilterName}\r\n        placeholder=\"Search...\"\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <Iconify icon=\"eva:search-fill\" sx={{ color: 'text.disabled' }} />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n\r\n        <Button\r\n          color=\"error\"\r\n          sx={{ flexShrink: 0 }}\r\n          onClick={onResetFilter}\r\n          startIcon={<Iconify icon=\"eva:trash-2-outline\" />}\r\n        >\r\n          Clear\r\n        </Button>\r\n    </Stack>\r\n  );\r\n}\r\n","import { Helmet } from 'react-helmet-async';\r\nimport { paramCase } from 'change-case';\r\nimport { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\n// @mui\r\nimport {\r\n  Tab,\r\n  Tabs,\r\n  Card,\r\n  Table,\r\n  Button,\r\n  Tooltip,\r\n  Divider,\r\n  TableBody,\r\n  Container,\r\n  IconButton,\r\n  TableContainer,\r\n} from '@mui/material';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../../routes/paths';\r\n// _mock_\r\n// components\r\nimport Label from '../../../components/label';\r\nimport Iconify from '../../../components/iconify';\r\nimport Scrollbar from '../../../components/scrollbar';\r\nimport ConfirmDialog from '../../../components/confirm-dialog';\r\nimport CustomBreadcrumbs from '../../../components/custom-breadcrumbs';\r\nimport { useSettingsContext } from '../../../components/settings';\r\nimport {\r\n  useTable,\r\n  getComparator,\r\n  emptyRows,\r\n  TableNoData,\r\n  TableEmptyRows,\r\n  TableHeadCustom,\r\n  TableSelectedAction,\r\n  TablePaginationCustom,\r\n} from '../../../components/table';\r\n// sections\r\nimport { UserTableToolbar, UserTableRow } from '../../../sections/@dashboard/user/list';\r\n// ----------------------------------------------------------------------\r\n\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'name', label: 'Name', align: 'left' },\r\n  { id: 'mobile', label: 'Mobile', align: 'left' },\r\n  { id: 'Company', label: 'Company', align: 'left' },\r\n  { id: 'Country', label: 'Country', align: 'left' },\r\n  { id: 'status', label: 'Status', align: 'left' },\r\n  { id: '' },\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function UserListPage() {\r\n  const {\r\n    dense,\r\n    page,\r\n    order,\r\n    orderBy,\r\n    rowsPerPage,\r\n    setPage,\r\n    //\r\n    selected,\r\n    setSelected,\r\n    onSelectRow,\r\n    onSelectAllRows,\r\n    //\r\n    onSort,\r\n    onChangeDense,\r\n    onChangePage,\r\n    onChangeRowsPerPage,\r\n  } = useTable();\r\n\r\n  const { themeStretch } = useSettingsContext();\r\n\r\n  const navigate = useNavigate();\r\n\r\n\r\n  const [tableData, setTableData] = useState([]);\r\n\r\n  const [openConfirm, setOpenConfirm] = useState(false);\r\n\r\n  const [filterName, setFilterName] = useState('');\r\n\r\n  const [filterRole, setFilterRole] = useState('all');\r\n\r\n  const [filterStatus, setFilterStatus] = useState('all');\r\n\r\n  const { customer } = useSelector(state => state.customer)\r\n  useEffect(() => {\r\n    setTableData(customer.filter((row) => row.approved === 1))\r\n  }, [customer])\r\n\r\n  const dataFiltered = applyFilter({\r\n    inputData: tableData,\r\n    comparator: getComparator(order, orderBy),\r\n    filterName,\r\n    filterRole,\r\n    filterStatus,\r\n  });\r\n\r\n  const dataInPage = dataFiltered.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\r\n\r\n  const denseHeight = dense ? 52 : 72;\r\n\r\n  const isFiltered = filterName !== '' || filterRole !== 'all' || filterStatus !== 'all';\r\n  const STATUS_OPTIONS = [\r\n    { value: 'All Customer', label: 'All Customer', color: 'success', count: customer.filter((row) => row.approved === 1 && row.status === 1)?.length },\r\n    { value: 'New Request', label: 'New Request', color: 'info', count: customer.filter((row) => row.approved === 0)?.length },\r\n    { value: 'Inactive Customer', label: 'Inactive Customer', color: 'error', count: customer.filter((row) => row.status === 0)?.length },\r\n  ];\r\n\r\n  const isNotFound =\r\n    (!dataFiltered.length && !!filterName) ||\r\n    (!dataFiltered.length && !!filterRole) ||\r\n    (!dataFiltered.length && !!filterStatus);\r\n\r\n  const handleOpenConfirm = () => {\r\n    setOpenConfirm(true);\r\n  };\r\n\r\n  const handleCloseConfirm = () => {\r\n    setOpenConfirm(false);\r\n  };\r\n\r\n  const handleFilterStatus = (event, newValue) => {\r\n    setPage(0);\r\n    setFilterStatus(newValue);\r\n    if (newValue === 'All Customer') {\r\n      setTableData(customer.filter((row) => row.approved === 1))\r\n    } else if (newValue === 'New Request') {\r\n      setTableData(customer.filter((row) => row.approved === 0))\r\n    } else if (newValue === 'Inactive Customer') {\r\n      setTableData(customer.filter((row) => row.status === 0))\r\n    }\r\n  };\r\n\r\n  const handleFilterName = (event) => {\r\n    setPage(0);\r\n    setFilterName(event.target.value);\r\n\r\n    if (event.target.value.trim() === '') {\r\n      // If the input value is empty, show all data\r\n      if (filterStatus === 'all') {\r\n        setTableData(customer.filter((row) => row.approved === 1 && row.status === 1))\r\n      } else if (filterStatus === 'new request') {\r\n        setTableData(customer.filter((row) => row.approved === 0))\r\n      } else if (filterStatus === 'inactive') {\r\n        setTableData(customer.filter((row) => row.status === 0))\r\n      }\r\n    } else {\r\n      // Filter the data based on the entered value\r\n      const data = tableData.filter((row) =>\r\n        row.name.toLowerCase().includes(event.target.value.toLowerCase())\r\n      );\r\n      setTableData(data);\r\n    }\r\n  };\r\n\r\n  const handleDeleteRow = (id) => {\r\n    const deleteRow = tableData.filter((row) => row.id !== id);\r\n    setSelected([]);\r\n    setTableData(deleteRow);\r\n\r\n    if (page > 0) {\r\n      if (dataInPage.length < 2) {\r\n        setPage(page - 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDeleteRows = (selectedRows) => {\r\n    const deleteRows = tableData.filter((row) => !selectedRows.includes(row.id));\r\n    setSelected([]);\r\n    setTableData(deleteRows);\r\n\r\n    if (page > 0) {\r\n      if (selectedRows.length === dataInPage.length) {\r\n        setPage(page - 1);\r\n      } else if (selectedRows.length === dataFiltered.length) {\r\n        setPage(0);\r\n      } else if (selectedRows.length > dataInPage.length) {\r\n        const newPage = Math.ceil((tableData.length - selectedRows.length) / rowsPerPage) - 1;\r\n        setPage(newPage);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleEditRow = (id) => {\r\n    navigate(PATH_DASHBOARD.customer.customerProfile(id));\r\n  };\r\n\r\n  const handleResetFilter = () => {\r\n    setFilterName('');\r\n    setFilterRole('all');\r\n    setFilterStatus('all');\r\n    setTableData(customer.filter((row) => row.approved === 1 && row.status === 1))\r\n  };\r\n\r\n\r\n  console.log(filterStatus);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Customer: List | Photojrafft.com</title>\r\n      </Helmet>\r\n\r\n      <Container maxWidth={themeStretch ? false : 'lg'}>\r\n        <CustomBreadcrumbs\r\n          heading=\"All Customer\"\r\n          links={[\r\n            { name: 'Dashboard', href: PATH_DASHBOARD.dashbord },\r\n            { name: 'Customer List' },\r\n          ]}\r\n          action={<>\r\n            Total Customer : {tableData.length}\r\n          </>}\r\n        />\r\n        <Card>\r\n          <Tabs\r\n            value={filterStatus}\r\n            onChange={handleFilterStatus}\r\n            sx={{\r\n              px: 2,\r\n              bgcolor: 'background.neutral',\r\n            }}\r\n          >\r\n            {STATUS_OPTIONS.map((tab, i) => (\r\n              <Tab key={i} label={tab.value} value={tab.value} icon={\r\n                <Label color={tab.color} sx={{ mr: 1 }}>\r\n                  {tab.count}\r\n                </Label>\r\n              } />\r\n            ))}\r\n          </Tabs>\r\n\r\n          <Divider />\r\n\r\n          <UserTableToolbar\r\n            isFiltered={isFiltered}\r\n            filterName={filterName}\r\n            onFilterName={handleFilterName}\r\n            onResetFilter={handleResetFilter}\r\n          />\r\n\r\n          <TableContainer sx={{ position: 'relative', overflow: 'unset' }}>\r\n            <TableSelectedAction\r\n              dense={dense}\r\n              numSelected={selected.length}\r\n              rowCount={tableData.length}\r\n              onSelectAllRows={(checked) =>\r\n                onSelectAllRows(\r\n                  checked,\r\n                  tableData.map((row) => row.id)\r\n                )\r\n              }\r\n              action={\r\n                <Tooltip title=\"Delete\">\r\n                  <IconButton color=\"primary\" onClick={handleOpenConfirm}>\r\n                    <Iconify icon=\"eva:trash-2-outline\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              }\r\n            />\r\n\r\n            <Scrollbar>\r\n              <Table size={dense ? 'small' : 'medium'} sx={{ minWidth: 800 }}>\r\n                <TableHeadCustom\r\n                  order={order}\r\n                  orderBy={orderBy}\r\n                  headLabel={TABLE_HEAD}\r\n                  rowCount={tableData.length}\r\n                  numSelected={selected.length}\r\n                  onSort={onSort}\r\n                  onSelectAllRows={(checked) =>\r\n                    onSelectAllRows(\r\n                      checked,\r\n                      tableData.map((row) => row.id)\r\n                    )\r\n                  }\r\n                />\r\n\r\n                <TableBody>\r\n                  {tableData\r\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                    .map((row) => (\r\n                      <UserTableRow\r\n                        key={row.id}\r\n                        row={row}\r\n                        selected={selected.includes(row.id)}\r\n                        onSelectRow={() => onSelectRow(row.id)}\r\n                        onDeleteRow={() => handleDeleteRow(row.id)}\r\n                        onEditRow={() => handleEditRow(row.id)}\r\n                      />\r\n                    ))}\r\n\r\n                  <TableEmptyRows\r\n                    height={denseHeight}\r\n                    emptyRows={emptyRows(page, rowsPerPage, tableData.length)}\r\n                  />\r\n\r\n                  {/* <TableNoData isNotFound={isNotFound} /> */}\r\n                </TableBody>\r\n              </Table>\r\n            </Scrollbar>\r\n          </TableContainer>\r\n\r\n          <TablePaginationCustom\r\n            count={dataFiltered.length}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            onPageChange={onChangePage}\r\n            onRowsPerPageChange={onChangeRowsPerPage}\r\n            //\r\n            dense={dense}\r\n            onChangeDense={onChangeDense}\r\n          />\r\n        </Card>\r\n      </Container>\r\n\r\n      <ConfirmDialog\r\n        open={openConfirm}\r\n        onClose={handleCloseConfirm}\r\n        title=\"Delete\"\r\n        content={\r\n          <>\r\n            Are you sure want to delete <strong> {selected.length} </strong> items?\r\n          </>\r\n        }\r\n        action={\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"error\"\r\n            onClick={() => {\r\n              handleDeleteRows(selected);\r\n              handleCloseConfirm();\r\n            }}\r\n          >\r\n            Delete\r\n          </Button>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction applyFilter({ inputData, comparator, filterName, filterStatus, filterRole }) {\r\n  const stabilizedThis = inputData.map((el, index) => [el, index]);\r\n\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n\r\n  inputData = stabilizedThis.map((el) => el[0]);\r\n\r\n  if (filterName) {\r\n    inputData = inputData.filter(\r\n      (user) => user.name.toLowerCase().indexOf(filterName.toLowerCase()) !== -1\r\n    );\r\n  }\r\n\r\n  if (filterStatus !== 'all') {\r\n    inputData = inputData.filter((user) => user.status === filterStatus);\r\n  }\r\n\r\n  if (filterRole !== 'all') {\r\n    inputData = inputData.filter((user) => user.role === filterRole);\r\n  }\r\n\r\n  return inputData;\r\n}\r\n"],"names":["ConfirmDialog","_ref","title","content","action","open","onClose","other","_objectWithoutProperties","_excluded","_jsxs","Dialog","_objectSpread","fullWidth","maxWidth","children","_jsx","DialogTitle","sx","pb","DialogContent","typography","DialogActions","Button","variant","color","onClick","BreadcrumbsLink","link","activeLast","disabled","name","href","icon","styles","alignItems","display","cursor","pointerEvents","renderContent","_Fragment","Box","component","mr","width","height","Link","RouterLink","to","CustomBreadcrumbs","links","heading","moreLink","lastLink","length","mb","Stack","direction","flexGrow","Typography","gutterBottom","Breadcrumbs","separator","Separator","map","LinkItem","flexShrink","mt","noWrap","target","rel","borderRadius","bgcolor","emptyRows","page","rowsPerPage","arrayLength","Math","max","descendingComparator","a","b","orderBy","getComparator","order","useTable","props","_useState","useState","defaultDense","_useState2","_slicedToArray","dense","setDense","_useState3","defaultOrderBy","_useState4","setOrderBy","_useState5","defaultOrder","_useState6","setOrder","_useState7","defaultCurrentPage","_useState8","setPage","_useState9","defaultRowsPerPage","_useState10","setRowsPerPage","_useState11","defaultSelected","_useState12","selected","setSelected","onSort","useCallback","id","onSelectRow","selectedIndex","indexOf","newSelected","concat","slice","onSelectAllRows","checked","newSelecteds","onChangePage","event","newPage","onChangeRowsPerPage","parseInt","value","onChangeDense","EmptyContent","description","img","justifyContent","textAlign","p","theme","spacing","Image","disabledEffect","alt","src","TableNoData","isNotFound","TableRow","TableCell","colSpan","TableEmptyRows","visuallyHidden","border","margin","padding","overflow","position","whiteSpace","clip","TableHeadCustom","_ref$rowCount","rowCount","headLabel","_ref$numSelected","numSelected","TableHead","Checkbox","indeterminate","onChange","headCell","align","sortDirection","minWidth","TableSortLabel","hideSortIcon","active","textTransform","label","TableSelectedAction","pl","pr","top","left","zIndex","ml","TablePaginationCustom","_ref$rowsPerPageOptio","rowsPerPageOptions","TablePagination","FormControlLabel","control","Switch","py","sm","UserTableRow","row","onEditRow","onDeleteRow","compunys_name","phone_no","country","status","openConfirm","setOpenConfirm","openPopover","setOpenPopover","handleClosePopover","hover","CustomAvatar","PATH_DASHBOARD","Label","IconButton","currentTarget","Iconify","MenuPopover","arrow","MenuItem","UserTableToolbar","isFiltered","filterName","onFilterName","onResetFilter","xs","px","TextField","placeholder","InputProps","startAdornment","InputAdornment","startIcon","TABLE_HEAD","UserListPage","_customer$filter","_customer$filter2","_customer$filter3","_useTable","themeStretch","useSettingsContext","navigate","useNavigate","tableData","setTableData","setFilterName","filterRole","setFilterRole","filterStatus","setFilterStatus","customer","useSelector","state","useEffect","filter","approved","dataFiltered","inputData","comparator","stabilizedThis","el","index","sort","user","toLowerCase","role","applyFilter","dataInPage","denseHeight","STATUS_OPTIONS","count","handleCloseConfirm","console","log","Helmet","Container","Card","Tabs","newValue","tab","i","Tab","Divider","trim","data","includes","TableContainer","Tooltip","Scrollbar","Table","size","TableBody","deleteRow","handleDeleteRow","onPageChange","onRowsPerPageChange","selectedRows","deleteRows","ceil","handleDeleteRows"],"sourceRoot":""}
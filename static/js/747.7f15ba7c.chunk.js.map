{"version":3,"file":"static/js/747.7f15ba7c.chunk.js","mappings":"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","sources":["components/confirm-dialog/ConfirmDialog.js","pages/dashboard/Settings/Product/list/ProductTableRow.js","pages/dashboard/Settings/Product/index.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\r\n// @mui\r\nimport { Dialog, Button, DialogTitle, DialogActions, DialogContent } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nConfirmDialog.propTypes = {\r\n  open: PropTypes.bool,\r\n  title: PropTypes.node,\r\n  action: PropTypes.node,\r\n  content: PropTypes.node,\r\n  onClose: PropTypes.func,\r\n};\r\n\r\nexport default function ConfirmDialog({ title, content, action, open, onClose, ...other }) {\r\n  return (\r\n    <Dialog fullWidth maxWidth=\"xs\" open={open} onClose={onClose} {...other}>\r\n      <DialogTitle sx={{ pb: 2 }}>{title}</DialogTitle>\r\n\r\n      {content && <DialogContent sx={{ typography: 'body2' }}> {content} </DialogContent>}\r\n\r\n      <DialogActions>\r\n        {action}\r\n\r\n        <Button variant=\"outlined\" color=\"inherit\" onClick={onClose}>\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport { sentenceCase } from 'change-case';\r\n// @mui\r\nimport {\r\n  Stack,\r\n  Button,\r\n  TableRow,\r\n  Checkbox,\r\n  MenuItem,\r\n  TableCell,\r\n  IconButton,\r\n  Link,\r\n  Switch,\r\n} from '@mui/material';\r\nimport { toast } from 'react-toastify';\r\nimport { Edit } from '@mui/icons-material';\r\n// utils\r\nimport { fDate } from '../../../../../utils/formatTime';\r\nimport { fCurrency } from '../../../../../utils/formatNumber';\r\n// components\r\nimport Label from '../../../../../components/label';\r\nimport Image from '../../../../../components/image';\r\nimport Iconify from '../../../../../components/iconify';\r\nimport MenuPopover from '../../../../../components/menu-popover';\r\nimport ConfirmDialog from '../../../../../components/confirm-dialog';\r\nimport { api } from '../../../../../Api/api';\r\nimport { fetchproduct } from '../../../../../redux/thunk/index';\r\n// ----------------------------------------------------------------------\r\nimport { useDispatch, useSelector } from '../../../../../redux/store';\r\nimport { statusCode } from '../../../../../constants';\r\n\r\nProductTableRow.propTypes = {\r\n  row: PropTypes.object,\r\n  selected: PropTypes.bool,\r\n  onEditRow: PropTypes.func,\r\n  onViewRow: PropTypes.func,\r\n  onSelectRow: PropTypes.func,\r\n  onDeleteRow: PropTypes.func,\r\n};\r\n\r\nexport default function ProductTableRow({\r\n  row,\r\n  selected,\r\n  onSelectRow,\r\n  onDeleteRow,\r\n  onEditRow,\r\n  onViewRow,\r\n}) {\r\n  const { id, name, img, created_at, status } = row;\r\n\r\n  const [openConfirm, setOpenConfirm] = useState(false);\r\n\r\n  const [openPopover, setOpenPopover] = useState(null);\r\n\r\n  const disapatch = useDispatch();\r\n\r\n  const handleOpenConfirm = () => {\r\n    setOpenConfirm(true);\r\n  };\r\n\r\n  const handleCloseConfirm = () => {\r\n    setOpenConfirm(false);\r\n  };\r\n\r\n  const handleOpenPopover = (event) => {\r\n    setOpenPopover(event.currentTarget);\r\n  };\r\n\r\n  const handleClosePopover = () => {\r\n    setOpenPopover(null);\r\n  };\r\n\r\n  return (\r\n    <TableRow hover selected={selected}>\r\n      <TableCell padding=\"checkbox\">\r\n        <Checkbox checked={selected} onClick={onSelectRow} />\r\n      </TableCell>\r\n\r\n      <TableCell>\r\n        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n          <Image\r\n            disabledEffect\r\n            visibleByDefault\r\n            alt={name}\r\n            src={img}\r\n            sx={{ borderRadius: 1.5, width: 48, height: 48 }}\r\n          />\r\n\r\n          <Link\r\n            noWrap\r\n            color=\"inherit\"\r\n            variant=\"subtitle2\"\r\n            onClick={onViewRow}\r\n            sx={{ cursor: 'pointer' }}\r\n          >\r\n            {name}\r\n\r\n          </Link>\r\n        </Stack>\r\n      </TableCell>\r\n\r\n      <TableCell>{fDate(created_at)}</TableCell>\r\n\r\n      {/* <TableCell align=\"center\">\r\n          <Label\r\n            variant=\"soft\"\r\n            color={\r\n              (inventoryType === 'out_of_stock' && 'error') ||\r\n              (inventoryType === 'low_stock' && 'warning') ||\r\n              'success'\r\n            }\r\n            sx={{ textTransform: 'capitalize' }}\r\n          >\r\n            {inventoryType ? sentenceCase(inventoryType) : ''}\r\n          </Label>\r\n        </TableCell> */}\r\n\r\n      {/* <TableCell align=\"right\">{fCurrency(price)}</TableCell> */}\r\n\r\n      <TableCell align=\"right\">\r\n        <IconButton color='error' onClick={() => {\r\n          const tosatid = toast.loading('Please wait...');\r\n          api.productApi.Delete(id).then((res) => {\r\n            if (res.data.code === statusCode.created) {\r\n              disapatch(fetchproduct());\r\n              //   setUpdate(false);\r\n              toast.update(tosatid, { render: res.data.message, type: 'success', isLoading: false });\r\n              setTimeout(() => {\r\n                toast.dismiss(tosatid);\r\n              }, 5000);\r\n              return;\r\n            }\r\n            toast.update(tosatid, { render: res.data.message, type: 'error', isLoading: false });\r\n            setTimeout(() => {\r\n              toast.dismiss(tosatid);\r\n            }, 5000);\r\n          }).catch((res => {\r\n            console.log(res);\r\n            toast.update(tosatid, { render: 'some thing went wrong', type: 'error', isLoading: false });\r\n            setTimeout(() => {\r\n              toast.dismiss(tosatid);\r\n            }, 5000);\r\n          }))\r\n        }} >\r\n          <Iconify icon=\"eva:trash-2-outline\" />\r\n        </IconButton>\r\n        <IconButton color='warning' onClick={() => onEditRow()} >\r\n          {/* <Iconify icon=\"eva:trash-2-outline\" /> */}\r\n          <Edit />\r\n        </IconButton>\r\n        <Switch\r\n          checked={status}\r\n          onChange={() =>\r\n            api.productApi.status(\r\n              id,\r\n              { status: !status },\r\n              () => {\r\n                disapatch(fetchproduct());\r\n              }\r\n            )\r\n          }\r\n        />\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n}\r\n","import { Helmet } from 'react-helmet-async';\r\nimport { paramCase } from 'change-case';\r\nimport { useState, useEffect } from 'react';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport {\r\n  Card,\r\n  Table,\r\n  Button,\r\n  Tooltip,\r\n  TableBody,\r\n  Container,\r\n  IconButton,\r\n  TableContainer,\r\n  TextField,\r\n  InputLabel,\r\n  Grid,\r\n  Switch,\r\n  Label,\r\n  FormControlLabel,\r\n  Typography,\r\n} from '@mui/material';\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n  useTable,\r\n  getComparator,\r\n  emptyRows,\r\n  TableNoData,\r\n  TableSkeleton,\r\n  TableEmptyRows,\r\n  TableHeadCustom,\r\n  TableSelectedAction,\r\n  TablePaginationCustom,\r\n} from '../../../../components/table';\r\nimport Iconify from '../../../../components/iconify';\r\nimport Scrollbar from '../../../../components/scrollbar';\r\nimport CustomBreadcrumbs from '../../../../components/custom-breadcrumbs';\r\nimport ConfirmDialog from '../../../../components/confirm-dialog';\r\nimport { ProductTableRow, ProductTableToolbar } from './list';\r\nimport { useDispatch, useSelector } from '../../../../redux/store';\r\nimport { getProducts } from '../../../../redux/slices/product';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../../../routes/paths';\r\n// components\r\nimport { useSettingsContext } from '../../../../components/settings';\r\nimport { api } from '../../../../Api/api';\r\nimport { fetchproduct } from '../../../../redux/thunk/index';\r\nimport { statusCode } from '../../../../constants';\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'name', label: 'Product', align: 'left' },\r\n  { id: '', label: 'Created at', align: 'left' },\r\n  { id: '' },\r\n];\r\n\r\nconst productData = {\r\n  name: '',\r\n  min_page: '',\r\n  boxandsleeve: true,\r\n  img: '',\r\n};\r\n\r\nfunction ProductList() {\r\n  const {\r\n    dense,\r\n    page,\r\n    order,\r\n    orderBy,\r\n    rowsPerPage,\r\n    setPage,\r\n    //\r\n    selected,\r\n    setSelected,\r\n    onSelectRow,\r\n    onSelectAllRows,\r\n    //\r\n    onSort,\r\n    onChangeDense,\r\n    onChangePage,\r\n    onChangeRowsPerPage,\r\n  } = useTable({\r\n    defaultOrderBy: 'createdAt',\r\n  });\r\n\r\n  const { themeStretch } = useSettingsContext();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const disapatch = useDispatch();\r\n\r\n  const { product } = useSelector((state) => state.resource);\r\n\r\n  const [tableData, setTableData] = useState([]);\r\n\r\n  const [data, setData] = useState(productData);\r\n\r\n  const [filterName, setFilterName] = useState('');\r\n\r\n  const [filterStatus, setFilterStatus] = useState([]);\r\n\r\n  const [openConfirm, setOpenConfirm] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  // useEffect(() => {\r\n  //     // dispatch(getProducts());\r\n  // }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (product?.length) {\r\n      setTableData(product);\r\n    }\r\n  }, [product]);\r\n\r\n  const dataFiltered = applyFilter({\r\n    inputData: tableData,\r\n    comparator: getComparator(order, orderBy),\r\n    filterName,\r\n    filterStatus,\r\n  });\r\n\r\n  const dataInPage = dataFiltered.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\r\n\r\n  const denseHeight = dense ? 60 : 80;\r\n\r\n  const isNotFound = !dataFiltered.length && !!filterName;\r\n\r\n  const handleOpenConfirm = () => {\r\n    setOpenConfirm(true);\r\n  };\r\n\r\n  const handleCloseConfirm = () => {\r\n    setOpenConfirm(false);\r\n  };\r\n\r\n  const handleDeleteRow = (id) => {\r\n    const deleteRow = tableData.filter((row) => row.id !== id);\r\n    setSelected([]);\r\n    setTableData(deleteRow);\r\n\r\n    if (page > 0) {\r\n      if (dataInPage.length < 2) {\r\n        setPage(page - 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleEditRow = (id) => {\r\n    navigate(PATH_DASHBOARD.products.productEdit(id));\r\n  };\r\n\r\n  const handleViewRow = (id) => {\r\n    navigate(PATH_DASHBOARD.eCommerce.view(paramCase(id)));\r\n  };\r\n\r\n  const handleResetFilter = () => {\r\n    setFilterName('');\r\n    setFilterStatus([]);\r\n  };\r\n\r\n  const save = () => {\r\n    const id = toast.loading('Please wait...');\r\n\r\n    const newError = {};\r\n\r\n    if (!data?.name) {\r\n      newError.name = 'Please select name';\r\n    }\r\n    if (!data?.img) {\r\n      newError.img = 'Please select img';\r\n    }\r\n    if (!data?.min_page) {\r\n      newError.min_page = 'Please select minimum page';\r\n    }\r\n\r\n    // Check if there are any errors\r\n    if (Object.keys(newError).length > 0) {\r\n      setError(newError);\r\n      toast.update(id, { render: 'Required Field *', type: 'error', isLoading: false });\r\n      setTimeout(() => {\r\n        toast.dismiss(id);\r\n      }, 5000);\r\n      return; // Validation failed\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('name', data.name);\r\n    formData.append('img', data.img);\r\n    formData.append('min_page', data.min_page);\r\n    formData.append('boxandsleeve', data.boxandsleeve);\r\n    api.productApi\r\n      .Create(formData)\r\n      .then((res) => {\r\n        if (res.data.code === statusCode.created) {\r\n          disapatch(fetchproduct());\r\n          setData(productData);\r\n          //   setUpdate(false);\r\n          setError({});\r\n          setOpenConfirm(!openConfirm);\r\n          toast.update(id, { render: res.data.message, type: 'success', isLoading: false });\r\n          setTimeout(() => {\r\n            toast.dismiss(id);\r\n          }, 5000);\r\n          return;\r\n        }\r\n        toast.update(id, { render: res.data.message, type: 'error', isLoading: false });\r\n        setTimeout(() => {\r\n          toast.dismiss(id);\r\n        }, 5000);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        toast.update(id, { render: 'some thing went wrong', type: 'error', isLoading: false });\r\n        setTimeout(() => {\r\n          toast.dismiss(id);\r\n        }, 5000);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Product List | Photokraft</title>\r\n      </Helmet>\r\n\r\n      <Container maxWidth={themeStretch ? false : 'lg'}>\r\n        <CustomBreadcrumbs\r\n          heading=\"Product List\"\r\n          links={[{ name: 'Dashboard', href: PATH_DASHBOARD.dashbord }, { name: 'Product List' }]}\r\n          action={\r\n            <Button\r\n              component={RouterLink}\r\n              onClick={() => handleOpenConfirm()}\r\n              variant=\"contained\"\r\n              startIcon={<Iconify icon=\"eva:plus-fill\" />}\r\n            >\r\n              New Product\r\n            </Button>\r\n          }\r\n        />\r\n\r\n        <Card>\r\n          <TableContainer sx={{ position: 'relative', overflow: 'unset' }}>\r\n            <TableSelectedAction\r\n              dense={dense}\r\n              numSelected={selected.length}\r\n              rowCount={tableData.length}\r\n              onSelectAllRows={(checked) =>\r\n                onSelectAllRows(\r\n                  checked,\r\n                  tableData.map((row) => row.id)\r\n                )\r\n              }\r\n              action={\r\n                <Tooltip title=\"Delete\">\r\n                  <IconButton color=\"primary\" onClick={handleOpenConfirm}>\r\n                    <Iconify icon=\"eva:trash-2-outline\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              }\r\n            />\r\n\r\n            <Scrollbar>\r\n              <Table size={dense ? 'small' : 'medium'} sx={{ minWidth: 960 }}>\r\n                <TableHeadCustom\r\n                  order={order}\r\n                  orderBy={orderBy}\r\n                  headLabel={TABLE_HEAD}\r\n                  rowCount={tableData.length}\r\n                  numSelected={selected.length}\r\n                  onSort={onSort}\r\n                  onSelectAllRows={(checked) =>\r\n                    onSelectAllRows(\r\n                      checked,\r\n                      tableData.map((row) => row.id)\r\n                    )\r\n                  }\r\n                />\r\n\r\n                <TableBody>\r\n                  {product\r\n                    ?.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                    .map(\r\n                      (row, index) =>\r\n                        row && (\r\n                          <ProductTableRow\r\n                            key={row.id}\r\n                            row={row}\r\n                            onViewRow={() => handleEditRow(row.id)}\r\n                            onDeleteRow={() => handleDeleteRow(row.id)}\r\n                            onEditRow={() => handleEditRow(row.id)}\r\n                          />\r\n                        )\r\n                    )}\r\n\r\n                  <TableEmptyRows\r\n                    height={denseHeight}\r\n                    emptyRows={emptyRows(page, rowsPerPage, tableData.length)}\r\n                  />\r\n\r\n                  <TableNoData isNotFound={isNotFound} />\r\n                </TableBody>\r\n              </Table>\r\n            </Scrollbar>\r\n          </TableContainer>\r\n\r\n          <TablePaginationCustom\r\n            count={dataFiltered.length}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            onPageChange={onChangePage}\r\n            onRowsPerPageChange={onChangeRowsPerPage}\r\n            //\r\n            dense={dense}\r\n            onChangeDense={onChangeDense}\r\n          />\r\n        </Card>\r\n      </Container>\r\n\r\n      <ConfirmDialog\r\n        open={openConfirm}\r\n        onClose={handleCloseConfirm}\r\n        title=\"Create New Product\"\r\n        content={\r\n          <Grid spacing={3}>\r\n            <TextField\r\n              sx={{ marginY: 2 }}\r\n              onChange={(e) => {\r\n                setError({ ...error, name: false });\r\n                setData({ ...data, name: e.target.value });\r\n              }}\r\n              label=\"Product Name\"\r\n              error={error?.name}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              sx={{ marginY: 2 }}\r\n              onChange={(e) => {\r\n                setError({ ...error, min_page: false });\r\n                setData({ ...data, min_page: e.target.value });\r\n              }}\r\n              label=\"Minnimum Page\"\r\n              error={error?.min_page}\r\n              fullWidth\r\n            />\r\n            {/* <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  defaultChecked={data.boxandsleeve}\r\n                  value={data.boxandsleeve}\r\n                  onChange={() => setData({ ...data, boxandsleeve: !data.boxandsleeve })}\r\n                />\r\n              }\r\n              label=\"Show Box & Sleeve\"\r\n            /> */}\r\n            <InputLabel\r\n              sx={{\r\n                color: '#777',\r\n                marginBottom: '.5em',\r\n                marginTop: '1em',\r\n                fontSize: '.75em',\r\n                display: 'block',\r\n              }}\r\n            >\r\n              Upload Product Image\r\n            </InputLabel>\r\n            <TextField\r\n              error={error?.img}\r\n              type=\"file\"\r\n              onChange={(e) => {\r\n                setError({ ...error, img: false });\r\n                setData({ ...data, img: e.target.files[0] });\r\n              }}\r\n              fullWidth\r\n            />\r\n            <Typography variant=\"caption\" color=\"error\">\r\n              Please upload 800 x 800 px size image\r\n            </Typography>\r\n          </Grid>\r\n        }\r\n        action={\r\n          <LoadingButton variant=\"contained\" onClick={() => save()}>\r\n            Create\r\n          </LoadingButton>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProductList;\r\n\r\nfunction applyFilter({ inputData, comparator, filterName, filterStatus }) {\r\n  const stabilizedThis = inputData.map((el, index) => [el, index]);\r\n\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n\r\n  inputData = stabilizedThis.map((el) => el[0]);\r\n\r\n  if (filterName) {\r\n    inputData = inputData.filter(\r\n      (product) => product.name.toLowerCase().indexOf(filterName.toLowerCase()) !== -1\r\n    );\r\n  }\r\n\r\n  if (filterStatus.length) {\r\n    inputData = inputData.filter((product) => filterStatus.includes(product.inventoryType));\r\n  }\r\n\r\n  return inputData;\r\n}\r\n"],"names":["ConfirmDialog","_ref","title","content","action","open","onClose","other","_objectWithoutProperties","_excluded","_jsxs","Dialog","_objectSpread","fullWidth","maxWidth","children","_jsx","DialogTitle","sx","pb","DialogContent","typography","DialogActions","Button","variant","color","onClick","ProductTableRow","row","selected","onSelectRow","onEditRow","onDeleteRow","onViewRow","id","name","img","created_at","status","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","disapatch","useDispatch","TableRow","hover","TableCell","padding","Checkbox","checked","Stack","direction","alignItems","spacing","Image","disabledEffect","visibleByDefault","alt","src","borderRadius","width","height","Link","noWrap","cursor","fDate","align","IconButton","tosatid","toast","api","then","res","data","code","statusCode","fetchproduct","render","message","type","isLoading","setTimeout","catch","console","log","Iconify","icon","Edit","Switch","onChange","TABLE_HEAD","label","productData","min_page","boxandsleeve","_useTable","useTable","defaultOrderBy","dense","page","order","orderBy","rowsPerPage","setPage","setSelected","onSelectAllRows","onSort","onChangeDense","onChangePage","onChangeRowsPerPage","themeStretch","useSettingsContext","navigate","useNavigate","product","useSelector","state","resource","tableData","setTableData","setData","_useState5","_useState6","filterName","_useState7","_useState8","filterStatus","_useState9","_useState10","openConfirm","setOpenConfirm","_useState11","_useState12","error","setError","useEffect","length","dataFiltered","inputData","comparator","stabilizedThis","map","el","index","sort","a","b","filter","toLowerCase","indexOf","includes","inventoryType","applyFilter","getComparator","dataInPage","slice","denseHeight","isNotFound","handleOpenConfirm","handleEditRow","PATH_DASHBOARD","_Fragment","Helmet","Container","CustomBreadcrumbs","heading","links","href","component","RouterLink","startIcon","Card","TableContainer","position","overflow","TableSelectedAction","numSelected","rowCount","Tooltip","Scrollbar","Table","size","minWidth","TableHeadCustom","headLabel","TableBody","deleteRow","handleDeleteRow","TableEmptyRows","emptyRows","TableNoData","TablePaginationCustom","count","onPageChange","onRowsPerPageChange","Grid","TextField","marginY","e","target","value","InputLabel","marginBottom","marginTop","fontSize","display","files","Typography","LoadingButton","newError","Object","keys","formData","FormData","append","err","save"],"sourceRoot":""}
{"version":3,"file":"static/js/4.8aa83c0b.chunk.js","mappings":"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","sources":["sections/auth/AuthNewPasswordForm.js","pages/auth/NewPasswordPage.js"],"sourcesContent":["import { useState } from 'react';\r\nimport * as Yup from 'yup';\r\nimport { useNavigate } from 'react-router-dom';\r\n// form\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n// @mui\r\nimport { Stack, IconButton, InputAdornment, FormHelperText } from '@mui/material';\r\nimport { LoadingButton } from '@mui/lab';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../routes/paths';\r\n// components\r\nimport Iconify from '../../components/iconify';\r\nimport { useSnackbar } from '../../components/snackbar';\r\nimport FormProvider, { RHFTextField, RHFCodes } from '../../components/hook-form';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AuthNewPasswordForm() {\r\n  const navigate = useNavigate();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const emailRecovery =\r\n    typeof window !== 'undefined' ? sessionStorage.getItem('email-recovery') : '';\r\n\r\n  const VerifyCodeSchema = Yup.object().shape({\r\n    code1: Yup.string().required('Code is required'),\r\n    code2: Yup.string().required('Code is required'),\r\n    code3: Yup.string().required('Code is required'),\r\n    code4: Yup.string().required('Code is required'),\r\n    code5: Yup.string().required('Code is required'),\r\n    code6: Yup.string().required('Code is required'),\r\n    email: Yup.string().required('Email is required').email('Email must be a valid email address'),\r\n    password: Yup.string()\r\n      .min(6, 'Password must be at least 6 characters')\r\n      .required('Password is required'),\r\n    confirmPassword: Yup.string()\r\n      .required('Confirm password is required')\r\n      .oneOf([Yup.ref('password')], 'Passwords must match'),\r\n  });\r\n\r\n  const defaultValues = {\r\n    code1: '',\r\n    code2: '',\r\n    code3: '',\r\n    code4: '',\r\n    code5: '',\r\n    code6: '',\r\n    email: emailRecovery || '',\r\n    password: '',\r\n    confirmPassword: '',\r\n  };\r\n\r\n  const methods = useForm({\r\n    mode: 'onChange',\r\n    resolver: yupResolver(VerifyCodeSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    handleSubmit,\r\n    formState: { isSubmitting, errors },\r\n  } = methods;\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      await new Promise((resolve) => setTimeout(resolve, 500));\r\n      console.log('DATA:', {\r\n        email: data.email,\r\n        code: `${data.code1}${data.code2}${data.code3}${data.code4}${data.code5}${data.code6}`,\r\n        password: data.password,\r\n      });\r\n      sessionStorage.removeItem('email-recovery');\r\n      enqueueSnackbar('Change password success!');\r\n      navigate(PATH_DASHBOARD.root);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n      <Stack spacing={3}>\r\n        <RHFTextField\r\n          name=\"email\"\r\n          label=\"Email\"\r\n          disabled={!!emailRecovery}\r\n          InputLabelProps={{ shrink: true }}\r\n        />\r\n\r\n        <RHFCodes keyName=\"code\" inputs={['code1', 'code2', 'code3', 'code4', 'code5', 'code6']} />\r\n\r\n        {(!!errors.code1 ||\r\n          !!errors.code2 ||\r\n          !!errors.code3 ||\r\n          !!errors.code4 ||\r\n          !!errors.code5 ||\r\n          !!errors.code6) && (\r\n          <FormHelperText error sx={{ px: 2 }}>\r\n            Code is required\r\n          </FormHelperText>\r\n        )}\r\n\r\n        <RHFTextField\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          type={showPassword ? 'text' : 'password'}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton onClick={() => setShowPassword(!showPassword)} edge=\"end\">\r\n                  <Iconify icon={showPassword ? 'eva:eye-fill' : 'eva:eye-off-fill'} />\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n\r\n        <RHFTextField\r\n          name=\"confirmPassword\"\r\n          label=\"Confirm New Password\"\r\n          type={showPassword ? 'text' : 'password'}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton onClick={() => setShowPassword(!showPassword)} edge=\"end\">\r\n                  <Iconify icon={showPassword ? 'eva:eye-fill' : 'eva:eye-off-fill'} />\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n\r\n        <LoadingButton\r\n          fullWidth\r\n          size=\"large\"\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          loading={isSubmitting}\r\n          sx={{ mt: 3 }}\r\n        >\r\n          Update Password\r\n        </LoadingButton>\r\n      </Stack>\r\n    </FormProvider>\r\n  );\r\n}\r\n","import { Helmet } from 'react-helmet-async';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n// @mui\r\nimport { Link, Typography } from '@mui/material';\r\n// routes\r\nimport { PATH_AUTH } from '../../routes/paths';\r\n// components\r\nimport Iconify from '../../components/iconify';\r\n// sections\r\nimport AuthNewPasswordForm from '../../sections/auth/AuthNewPasswordForm';\r\n// assets\r\nimport { SentIcon } from '../../assets/icons';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function NewPasswordPage() {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> New Password | Minimal UI</title>\r\n      </Helmet>\r\n\r\n      <SentIcon sx={{ mb: 5, height: 96 }} />\r\n\r\n      <Typography variant=\"h3\" paragraph>\r\n        Request sent successfully!\r\n      </Typography>\r\n\r\n      <Typography sx={{ color: 'text.secondary', mb: 5 }}>\r\n        We&apos;ve sent a 6-digit confirmation email to your email.\r\n        <br />\r\n        Please enter the code in below box to verify your email.\r\n      </Typography>\r\n\r\n      <AuthNewPasswordForm />\r\n\r\n      <Typography variant=\"body2\" sx={{ my: 3 }}>\r\n        Don’t have a code? &nbsp;\r\n        <Link variant=\"subtitle2\">Resend code</Link>\r\n      </Typography>\r\n\r\n      <Link\r\n        component={RouterLink}\r\n        to={PATH_AUTH.login}\r\n        color=\"inherit\"\r\n        variant=\"subtitle2\"\r\n        sx={{\r\n          mx: 'auto',\r\n          alignItems: 'center',\r\n          display: 'inline-flex',\r\n        }}\r\n      >\r\n        <Iconify icon=\"eva:chevron-left-fill\" width={16} />\r\n        Return to sign in\r\n      </Link>\r\n    </>\r\n  );\r\n}\r\n"],"names":["AuthNewPasswordForm","navigate","useNavigate","enqueueSnackbar","useSnackbar","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","emailRecovery","window","sessionStorage","getItem","VerifyCodeSchema","Yup","shape","code1","required","code2","code3","code4","code5","code6","email","password","min","confirmPassword","oneOf","defaultValues","methods","useForm","mode","resolver","yupResolver","handleSubmit","_methods$formState","formState","isSubmitting","errors","onSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","Promise","resolve","setTimeout","console","log","code","concat","removeItem","PATH_DASHBOARD","t0","error","stop","_x","apply","arguments","_jsx","FormProvider","children","_jsxs","Stack","spacing","RHFTextField","name","label","disabled","InputLabelProps","shrink","RHFCodes","keyName","inputs","FormHelperText","sx","px","type","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","edge","Iconify","icon","LoadingButton","fullWidth","size","variant","loading","mt","NewPasswordPage","_Fragment","Helmet","SentIcon","mb","height","Typography","paragraph","color","my","Link","component","RouterLink","to","PATH_AUTH","mx","alignItems","display","width"],"sourceRoot":""}
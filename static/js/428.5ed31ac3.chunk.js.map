{"version":3,"file":"static/js/428.5ed31ac3.chunk.js","mappings":"4UAce,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAsBC,EAAAA,KAAaC,MAAM,CAC7CC,MAAOF,EAAAA,KAAaG,SAAS,qBAAqBD,MAAM,yCAGpDE,GAAUC,EAAAA,EAAAA,IAAQ,CACtBC,UAAUC,EAAAA,EAAAA,GAAYR,GACtBS,cAAe,CAAEN,MAAO,sBAIxBO,EAEEL,EAFFK,aACaC,EACXN,EADFO,UAAaD,aAGTE,EAAQ,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,GAAI,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAElB,IAAIC,SAAQ,SAACC,GAAO,OAAKC,WAAWD,EAAS,IAAI,IAAE,KAAD,EACxDE,eAAeC,QAAQ,iBAAkBT,EAAKhB,OAC9CL,EAAS+B,EAAAA,GAAAA,aAAuBR,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,SAEhCU,QAAQC,MAAKX,EAAAS,IAAQ,yBAAAT,EAAAY,OAAA,GAAAf,EAAA,kBAExB,gBARagB,GAAA,OAAApB,EAAAqB,MAAA,KAAAC,UAAA,KAUd,OACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAY,CAACjC,QAASA,EAASQ,SAAUH,EAAaG,GAAU0B,SAAA,EAC/DC,EAAAA,EAAAA,KAACC,EAAAA,GAAY,CAACC,KAAK,QAAQC,MAAM,mBAEjCH,EAAAA,EAAAA,KAACI,EAAAA,EAAa,CACZC,WAAS,EACTC,KAAK,QACLC,KAAK,SACLC,QAAQ,YACRC,QAAStC,EACTuC,GAAI,CAAEC,GAAI,GAAIZ,SACf,mBAKP,C,eC1Ce,SAASa,IACtB,OACEf,EAAAA,EAAAA,MAAAgB,EAAAA,SAAA,CAAAd,SAAA,EACEC,EAAAA,EAAAA,KAACc,EAAAA,GAAM,CAAAf,UACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,oCAGTC,EAAAA,EAAAA,KAACe,EAAAA,GAAY,CAACL,GAAI,CAAEM,GAAI,EAAGC,OAAQ,OAEnCjB,EAAAA,EAAAA,KAACkB,EAAAA,EAAU,CAACV,QAAQ,KAAKW,WAAS,EAAApB,SAAC,2BAInCC,EAAAA,EAAAA,KAACkB,EAAAA,EAAU,CAACR,GAAI,CAAEU,MAAO,iBAAkBJ,GAAI,GAAIjB,SAAC,sHAKpDC,EAAAA,EAAAA,KAAC3C,EAAqB,KAEtBwC,EAAAA,EAAAA,MAACwB,EAAAA,EAAI,CACHC,UAAWC,EAAAA,GACXC,GAAInC,EAAAA,GAAAA,MACJ+B,MAAM,UACNZ,QAAQ,YACRE,GAAI,CACFC,GAAI,EACJc,GAAI,OACJC,WAAY,SACZC,QAAS,eACT5B,SAAA,EAEFC,EAAAA,EAAAA,KAAC4B,EAAAA,EAAO,CAACC,KAAK,wBAAwBC,MAAO,KAAM,yBAK3D,C","sources":["sections/auth/AuthResetPasswordForm.js","pages/auth/ResetPasswordPage.js"],"sourcesContent":["import * as Yup from 'yup';\r\nimport { useNavigate } from 'react-router-dom';\r\n// form\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useForm } from 'react-hook-form';\r\n// @mui\r\nimport { LoadingButton } from '@mui/lab';\r\n// routes\r\nimport { PATH_AUTH } from '../../routes/paths';\r\n// components\r\nimport FormProvider, { RHFTextField } from '../../components/hook-form';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AuthResetPasswordForm() {\r\n  const navigate = useNavigate();\r\n\r\n  const ResetPasswordSchema = Yup.object().shape({\r\n    email: Yup.string().required('Email is required').email('Email must be a valid email address'),\r\n  });\r\n\r\n  const methods = useForm({\r\n    resolver: yupResolver(ResetPasswordSchema),\r\n    defaultValues: { email: 'demo@minimals.cc' },\r\n  });\r\n\r\n  const {\r\n    handleSubmit,\r\n    formState: { isSubmitting },\r\n  } = methods;\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      await new Promise((resolve) => setTimeout(resolve, 500));\r\n      sessionStorage.setItem('email-recovery', data.email);\r\n      navigate(PATH_AUTH.newPassword);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n      <RHFTextField name=\"email\" label=\"Email address\" />\r\n\r\n      <LoadingButton\r\n        fullWidth\r\n        size=\"large\"\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        loading={isSubmitting}\r\n        sx={{ mt: 3 }}\r\n      >\r\n        Send Request\r\n      </LoadingButton>\r\n    </FormProvider>\r\n  );\r\n}\r\n","import { Helmet } from 'react-helmet-async';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n// @mui\r\nimport { Link, Typography } from '@mui/material';\r\n// routes\r\nimport { PATH_AUTH } from '../../routes/paths';\r\n// components\r\nimport Iconify from '../../components/iconify';\r\n// sections\r\nimport AuthResetPasswordForm from '../../sections/auth/AuthResetPasswordForm';\r\n// assets\r\nimport { PasswordIcon } from '../../assets/icons';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ResetPasswordPage() {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Reset Password | Minimal UI</title>\r\n      </Helmet>\r\n\r\n      <PasswordIcon sx={{ mb: 5, height: 96 }} />\r\n\r\n      <Typography variant=\"h3\" paragraph>\r\n        Forgot your password?\r\n      </Typography>\r\n\r\n      <Typography sx={{ color: 'text.secondary', mb: 5 }}>\r\n        Please enter the email address associated with your account and We will email you a link to\r\n        reset your password.\r\n      </Typography>\r\n\r\n      <AuthResetPasswordForm />\r\n\r\n      <Link\r\n        component={RouterLink}\r\n        to={PATH_AUTH.login}\r\n        color=\"inherit\"\r\n        variant=\"subtitle2\"\r\n        sx={{\r\n          mt: 3,\r\n          mx: 'auto',\r\n          alignItems: 'center',\r\n          display: 'inline-flex',\r\n        }}\r\n      >\r\n        <Iconify icon=\"eva:chevron-left-fill\" width={16} />\r\n        Return to sign in\r\n      </Link>\r\n    </>\r\n  );\r\n}\r\n"],"names":["AuthResetPasswordForm","navigate","useNavigate","ResetPasswordSchema","Yup","shape","email","required","methods","useForm","resolver","yupResolver","defaultValues","handleSubmit","isSubmitting","formState","onSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","Promise","resolve","setTimeout","sessionStorage","setItem","PATH_AUTH","t0","console","error","stop","_x","apply","arguments","_jsxs","FormProvider","children","_jsx","RHFTextField","name","label","LoadingButton","fullWidth","size","type","variant","loading","sx","mt","ResetPasswordPage","_Fragment","Helmet","PasswordIcon","mb","height","Typography","paragraph","color","Link","component","RouterLink","to","mx","alignItems","display","Iconify","icon","width"],"sourceRoot":""}